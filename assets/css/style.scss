---
# this ensures Jekyll reads the file to be transformed into CSS later
# only Main files contain this front matter, not partials.
# Usually a partial from _sass is imported. However, this is not done here.
# Somehow Jekyll can't interface nicely when it's css; it wouldn't reload properly.
# As such, the scss -> css conversion is still used with this being scss.
---

/* =========== */
/* = Colours = */
/* =========== */
@media (prefers-color-scheme: light) {
    :root {
        color-scheme: light;
        --colOne: #FF8FBC;
        --colTwo: #F5E4A3;
        --colThree: #FFFFFF;
        --colText: #727272;
        --colBlock: #E5E5E5;
        --colBg: #FFFFFF;
    }
}

@media (prefers-color-scheme: dark) {
    :root {
        color-scheme: dark;
        --colOne: #DD89AB;
        --colTwo: #DDCB88;
        --colThree: #EBEBEB;
        --colText: #EBEBEB;
        --colBlock: #474747;
        --colBg: #333333;
    }
}


/* ======== */
/* = Text = */
/* ======== */
body {
    background-color: var(--colBg);
    padding: 30px;
    font: 15px/1.3 "Nimbus Sans L", "Helvetica Neue", Helvetica, Arial, sans-serif;
    color: var(--colText);
    font-weight: 400;
}

p, ul, ol, table, pre, dl {
    margin: 0 0 16px;
}

p {
    text-align: justify;
}

strong {
    font-weight: 700;
}

small {
    font-size: 11px;
}

blockquote {
    border-left: 5px solid var(--colBlock);
    margin: 0;
    padding: 0 0 0 20px;
    border-radius: .4em;
}

code, pre {
    color: var(--colText);
    background: var(--colBlock);
    border-radius: .4em;
    padding: 0 5px 0 5px;
}

pre {
    padding: 8px 15px;
    background: var(--colBlock);
    border-radius: 5px;
    border: 1px solid var(--colBlock);
    overflow-x: auto;
}


/* =========== */
/* = Headers = */
/* =========== */
h1, h2, h3, h4, h5, h6 {
    color: var(--colText);
    line-height: 1.1;
}

h1 {
    font-size: 32px;
    border-bottom: 2px solid var(--colText);
    margin: 0 0 20px 0;
}

h1::before {
    content: "\1F87B";
}

h2 {
    font-size: 28px;
    border-bottom: 2px solid var(--colText);
    margin: 88px 0 20px 0;
}

h3 {
    font-size: 24px;
    border-bottom: 1px solid var(--colBlock);
    margin: 44px 0 20px 0;
}

h4 {
    font-size: 20px;
    margin: 22px 0 10px 0;
}

h5 {
    font-size: 16px;
    margin: 22px 0 10px 0;
}

h6{
    font-size: 32px;
    margin: 0 0 20px 0;
}


/* ========= */
/* = Links = */
/* ========= */
a {
    color: var(--colOne);
    text-decoration: none;
}

a:hover, a:focus {
    color: var(--colTwo);
}

a small {
    font-size: 11px;
    color: var(--colTwo);
    margin-top:-0.3em;
    display: block;
}

a:hover small {
    color: var(--colText);
}

.navigation {
    color: var(--colText);
}


@keyframes navAnimation {
      0% { color:var(--colOne); }
      50% { color:var(--colOne); }
      51% { color:var(--colText); }
      100% { color:var(--colText); }
}

.navactive {
    color: var(--colOne);
}


/* ======== */
/* = Page = */
/* ======== */
.wrapper {
    width: 1060px;
    margin: 0 0 0 15.625%; /*250px for section center*/
}

header {
    width: 345px;
    float: left;
    position: fixed;
    -webkit-font-smoothing: subpixel-antialiased;
}

section {
    width: 700px;
    float: right;
    padding-bottom: 50px;
}

footer {
    width: 270px;
    float: left;
    position: fixed;
    bottom: 0px;
    -webkit-font-smoothing: subpixel-antialiased;
}


/* ========== */
/* = Tables = */
/* ========== */
table {
    width: max-content;
    max-width: 100%;
    overflow: auto;
    border-collapse: collapse;
}

th, td {
    text-align: left;
    padding: 5px 10px;
    vertical-align: top;
}

dt {
    color: var(--colText);
    font-weight: 700;
}

th {
    color: var(--colText);
}

img {
    max-width: 100%;
}

kbd {
    background-color: #fafbfc;
    border: 1px solid #c6cbd1;
    border-bottom-color: #959da5;
    border-radius: 3px;
    box-shadow: inset 0 -1px 0 #959da5;
    color: #444d56;
    display: inline-block;
    font-size: 11px;
    line-height: 10px;
    padding: 3px 5px;
    vertical-align: middle;
}

hr {
    border: 0;
    background: var(--colBlock);
    height: 1px;
    margin: 0 0 20px;
}


/* ======= */
/* = SVG = */
/* ======= */
// Classes for fill colours.
.svgcolone {
    fill: var(--colOne);
}

.svgcoltwo {
    fill: var(--colTwo);
}

.svgcolthree {
    fill: var(--colThree);
}

.svgcoltext {
    fill: var(--colText);
}

.svgcolblock {
    fill: var(--colBlock);
}

.svgcolbg {
    fill: var(--colBg);
}


/* =========== */
/* = Buttons = */
/* =========== */
// https://stackoverflow.com/questions/2460100/remove-the-complete-styling-of-an-html-button-submit
button, input[type="submit"], input[type="reset"] {
    background: none;
    color: inherit;
    border: none;
    padding: 0;
    font: inherit;
    cursor: pointer;
    outline: inherit;
}

// Class to assign to button.
.svgbutton {
}

// Class for part of button when it's off.
.svgbuttoncoloff {
    fill: var(--colText);
}

// Class for part of button when it's on.
.svgbuttoncolon {
    fill: var(--colOne);
}

// Change child class of class upon hover.
// https://stackoverflow.com/questions/1935820/set-ahover-based-on-class
// https://css-tricks.com/the-many-ways-to-change-an-svg-fill-on-hover-and-when-to-use-them/
// https://stackoverflow.com/questions/10483323/use-hover-to-modify-the-css-of-another-class
.svgbutton:hover .svgbuttoncoloff{
    fill: var(--colTwo)
}

.svgbutton:hover .svgbuttoncolon{
    fill: var(--colTwo)
}

// Class for div the button reveals.
// https://talk.jekyllrb.com/t/when-inserting-text-inside-a-div-in-markdown-markdown-doesnt-renders-correctly-whats-inside/1496/2
// https://sentry.io/answers/how-do-i-add-a-tab-space-instead-of-multiple-non-breaking-spaces/
// https://talk.jekyllrb.com/t/rendering-markdown-inside-an-html-include/4186/3
.buttondiv {
    margin: -10px 0px 16px 0px;
    padding: 0px 0px 0px 20px;
    border-left: 5px solid var(--colBlock);
    border-radius: 0.4em;
}


/* ===================== */
/* = Animation Flicker = */
/* ===================== */
@keyframes flickerAnimation {
    0%   { opacity:1; }
    50% { opacity:1; }
    51% { opacity:0; }
    100% { opacity:0; }
}

.animate-flicker {
    animation: flickerAnimation .4s infinite;
    display:inline;
}

@keyframes fadeAnimation {
    0%   { opacity:1; }
    50%  { opacity:0; }
    100% { opacity:1; }
}

.animate-fade {
    animation: fadeAnimation .8s infinite;
}


/* ========= */
/* = Media = */
/* ========= */
video {
    margin-bottom: 15px;
}


/* ============== */
/* = Resolution = */
/* ============== */
@media print, screen and (max-width: 1619px) { 
    div.wrapper {
        margin: 0 auto;
    }
}

@media print, screen and (max-width: 1139px) { 
    div.wrapper {
        width: auto;
        margin: 0;
    }

    header, section, footer {
        float: none;
        position: static;
        width: auto;
    }

    header {
        padding-right: 320px;
    }

    section {
        border: 5px solid var(--colBlock);
        border-width: 1px 0;
        padding: 20px 0;
        margin: 0 0 20px;
    }

    header a small {
        display: inline;
    }

    header ul {
        position: absolute;
        right: 50px;
        top: 52px;
    }
}

@media print, screen and (max-width: 720px) {
    body {
        word-wrap: break-word;
    }

    header {
        padding: 0;
    }

    header ul, header p.view {
        position: static;
    }

    pre, code {
        word-wrap: normal;
    }
}

@media print, screen and (max-width: 480px) {
    body {
        padding: 15px;
    }

    .downloads {
        width: 99%;
    }

    .downloads li, .downloads li + li + li {
        width: 33%;
    }
}

@media print {
    body {
        padding: 0.4in;
        font-size: 12pt;
        color: var(--colText);
    }
}